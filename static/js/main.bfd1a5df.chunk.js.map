{"version":3,"sources":["components/BoopNav.jsx","config/adverts.js","components/BoopContacts.jsx","App.js","server/api.js","reportWebVitals.js","index.js"],"names":["BoopNav","users","useState","displaySearch","setDisplaySearch","hideSearch","setSearchUsersResult","searchUsersResult","useEffect","console","log","Fragment","className","onFocus","type","placeholder","onClick","autoFocus","onChange","e","result","query","target","value","filter","user","name","toUpperCase","includes","push","searchUsers","onBlur","length","map","idx","src","id","alt","Adverts","title","href","imgSrc","BoopContacts","ad","rel","substr","style","margin","App","setUsers","fetch","method","then","res","json","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAsFeA,EApFC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEhB,EAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAMMC,EAAa,WACjBD,GAAiB,GACjBE,EAAqB,KAGvB,EAAkDJ,mBAAS,IAA3D,mBAAOK,EAAP,KAA0BD,EAA1B,KAsBA,OAJAE,qBAAU,WACRC,QAAQC,IAAI,kBAAmBH,KAC9B,CAACA,IAGF,eAAC,IAAMI,SAAP,WACE,sBAAKC,UAAU,WAAf,UAEE,qBAAKA,UAAU,OAAf,SACE,mBAAGA,UAAU,iBAAiB,cAAY,WAG5C,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAe,cAAY,SAExC,uBAAOC,QAAS,WAzCtBT,GAAiB,IAyCuBU,KAAK,OAAOC,YAAY,0BAK7DZ,EACC,sBAAKS,UAAU,gBAAf,UAEE,sBAAKA,UAAU,mBAAf,UAEE,qBAAKI,QAAS,kBAAIX,KAAcO,UAAU,cAA1C,SACE,mBAAGA,UAAU,mBAAmB,cAAY,WAE9C,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAe,cAAY,SAExC,uBAAOK,WAAS,EAACC,SAAU,SAACC,GAAD,OA/CnB,SAACA,GACnB,IAAIC,EAAS,GACTC,EAAQF,EAAEG,OAAOC,MACC,KAAnBJ,EAAEG,OAAOC,OACVtB,EAAMuB,QAAO,SAACC,GAIZ,OAHGA,EAAKC,KAAKC,cAAcC,SAASP,EAAMM,gBACxCP,EAAOS,KAAKJ,GAEPL,KAETd,EAAqBc,IAErBd,EAAqB,IAmCmBwB,CAAYX,IAAIY,OAAQ,kBAAI1B,KAAcS,KAAK,OAAOC,YAAY,0BAIrGR,GAAqBA,EAAkByB,OAAS,EAC/CzB,EAAkB0B,KAAI,SAACR,EAAMS,GAC3B,OACE,sBAAetB,UAAU,eAAzB,UACE,qBAAKuB,IAAG,0DAAqDV,EAAKW,GAA1D,QAAoEC,IAAI,YAC/EZ,EAAKC,OAFEQ,MAMd,qBAAKtB,UAAU,eAAf,mCAIL,OChFM0B,EAAU,CACrB,CACEC,MAAO,0CACPC,KAAM,wCACNC,OAAQ,sCAEV,CACEF,MAAO,mDACPC,KAAM,mDACNC,OAAQ,kCC0DGC,EA/DM,SAAC,GAAa,IAAZzC,EAAW,EAAXA,MAErB,OACE,sBAAKW,UAAU,gBAAf,UACE,0CAEA,qBAAKA,UAAU,kBAAf,SACG0B,GAAWA,EAAQL,KAAI,SAACU,EAAIT,GAC3B,OACE,oBAEEM,KAAMG,EAAGH,KACTlB,OAAO,SACPsB,IAAI,sBACJhC,UAAU,aALZ,UAOE,qBAAKuB,IAAKQ,EAAGF,OAAQJ,IAAI,SACzB,sBAAKzB,UAAU,kBAAf,UACE,8BAAM+B,EAAGJ,QACT,gCAAQI,EAAGH,KAAKK,OAAO,UATpBX,QAgBb,sBAAKtB,UAAU,qBAAf,UACE,yCAEA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,WAAf,SAA0B,mBAAGA,UAAU,qBAAqB,cAAY,WACxE,qBAAKA,UAAU,kBAAf,SAAiC,mBAAGA,UAAU,eAAe,cAAY,WACzE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,QACf,qBAAKA,UAAU,MAAMkC,MAAO,CAACC,OAAQ,eACrC,qBAAKnC,UAAU,iBAKrB,qBAAKA,UAAU,aAAf,SACGX,GAASA,EAAMgC,KAAI,SAACR,EAAMS,GACzB,OACE,sBAAetB,UAAU,eAAzB,UACE,qBAAKuB,IAAG,0DAAqDV,EAAKW,GAA1D,QAAoEC,IAAI,YAC/EZ,EAAKC,OAFEQ,QAQhB,oDAEA,qBAAKtB,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,8BAAK,uCADP,4BCxBOoC,EA3BH,WAEV,MAA0B9C,mBAAS,IAAnC,mBAAOD,EAAP,KAAcgD,EAAd,KAYA,OAVAzC,qBAAU,WCVH0C,MAAM,6CAA8C,CAACC,OAAQ,QACjEC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,OAAOA,KDQKH,MAAK,SAAAC,GACjBJ,EAASI,QAEX,IAEF7C,qBAAU,WACRC,QAAQC,IAAI,QAAQT,KACpB,CAACA,IAGD,qBAAKW,UAAU,2BAAf,SACE,sBAAKA,UAAU,MAAf,UAEE,cAAC,EAAD,CAASX,MAAOA,IAEhB,cAAC,EAAD,CAAcA,MAAOA,UEhBduD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.bfd1a5df.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst BoopNav = ({users}) => {\r\n\r\n  const [displaySearch, setDisplaySearch] = useState(false);\r\n  \r\n  const showSearch = () => {\r\n    setDisplaySearch(true);\r\n  };\r\n  \r\n  const hideSearch = () => {\r\n    setDisplaySearch(false);\r\n    setSearchUsersResult([]);\r\n  };\r\n  \r\n  const [searchUsersResult, setSearchUsersResult] = useState([]);\r\n  \r\n  const searchUsers = (e) => {\r\n    let result = [];\r\n    let query = e.target.value;\r\n    if(e.target.value !== '') {\r\n      users.filter((user) => {\r\n        if(user.name.toUpperCase().includes(query.toUpperCase())) {\r\n          result.push(user);\r\n        }\r\n        return result;\r\n      })\r\n      setSearchUsersResult(result);\r\n    } else {\r\n      setSearchUsersResult([]);\r\n    }\r\n  };\r\n  \r\n  useEffect(()=> {\r\n    console.log(\"search results?\", searchUsersResult)\r\n  }, [searchUsersResult]);\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"boop-nav\">\r\n        \r\n        <div className=\"logo\">\r\n          <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n        </div>\r\n        \r\n        <div className=\"search-faceboop\">\r\n          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n          {/* show modal on focus */}\r\n          <input onFocus={()=>showSearch()} type=\"text\" placeholder=\"Search Faceboop\"/>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n      {displaySearch ?\r\n        <div className=\"recent-search\">\r\n          \r\n          <div className=\"search-mod-group\">\r\n            {/* hide modal on click */}\r\n            <div onClick={()=>hideSearch()} className=\"search-back\">\r\n              <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div className=\"search-faceboop\">\r\n              <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              {/* ðŸ§ª hide modal on blur  */}\r\n              <input autoFocus onChange={(e)=>searchUsers(e)} onBlur={()=>hideSearch()} type=\"text\" placeholder=\"Search Faceboop\"/>\r\n            </div>\r\n          </div>\r\n          \r\n          {searchUsersResult && searchUsersResult.length > 0 ? \r\n            searchUsersResult.map((user, idx)=> {\r\n              return(\r\n                <div key={idx} className=\"user-contact\">\r\n                  <img src={`https://randomuser.me/api/portraits/thumb/women/${user.id}.jpg`} alt=\"contact\"/>\r\n                  {user.name}\r\n                </div>\r\n              );\r\n            })\r\n          : <div className=\"mt-auto mb-2\">No recent searches</div>}\r\n          \r\n        </div>\r\n        \r\n      :''}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BoopNav;\r\n","\r\nexport const Adverts = [\r\n  {\r\n    title: 'One of the BEST new websites this year.',\r\n    href: 'https://mcote7.github.io/michael-cote',\r\n    imgSrc: 'https://picsum.photos/id/0/131/131'\r\n  },\r\n  {\r\n    title: 'Just another boring advertisement about nothing.',\r\n    href: 'https://js13kgames.com/games/underrun/index.html',\r\n    imgSrc: 'https://picsum.photos/131/131'\r\n  }\r\n];","import React from 'react';\r\n\r\nimport { Adverts } from '../config/adverts';\r\n\r\n\r\nconst BoopContacts = ({users}) => {\r\n\r\n  return (\r\n    <div className=\"boop-contacts\">\r\n      <p>Sponsored</p>\r\n      \r\n      <div className=\"boop-spons-cont\">\r\n        {Adverts && Adverts.map((ad, idx) => {\r\n          return(\r\n            <a \r\n              key={idx} \r\n              href={ad.href} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"boop-spons\">\r\n              \r\n              <img src={ad.imgSrc} alt=\"cote\"/>\r\n              <div className=\"boop-spons-text\">\r\n                <div>{ad.title}</div>\r\n                <small>{ad.href.substr(8)}</small>\r\n              </div>\r\n            </a>\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      <div className=\"contacts-title-row\">\r\n        <p>Contacts</p>\r\n        \r\n        <div className=\"contacts-options\">\r\n          <div className=\"new-room\"><i className=\"fa fa-video-camera\" aria-hidden=\"true\"></i></div>\r\n          <div className=\"search-messages\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></div>\r\n          <div className=\"options\">\r\n            <div className=\"dot\"></div>\r\n            <div className=\"dot\" style={{margin: '0 0.15rem'}}></div>\r\n            <div className=\"dot\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"users-cont\">\r\n        {users && users.map((user, idx) => {\r\n          return(\r\n            <div key={idx} className=\"user-contact\">\r\n              <img src={`https://randomuser.me/api/portraits/thumb/women/${user.id}.jpg`} alt=\"contact\"/>\r\n              {user.name}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      <p>Group Conversations</p>\r\n      \r\n      <div className=\"group-cont\">\r\n        <div className=\"group-contact\">\r\n          <div><span>+</span></div>\r\n          Create New Group\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoopContacts;\r\n","import React, { useEffect, useState } from 'react';\n\nimport { getAllUsers } from './server/api';\n\nimport BoopNav from './components/BoopNav';\nimport BoopContacts from './components/BoopContacts';\n\n\nconst App = () => {\n  \n  const [users, setUsers] = useState([]);\n  \n  useEffect(()=> {\n    getAllUsers().then(res => {\n      setUsers(res);\n    });\n  },[]);\n  \n  useEffect(()=> {\n    console.log(\"users\",users)\n  },[users]);\n  \n  return (\n    <div className=\"faceboop container-fluid\">\n      <div className=\"row\">\n        \n        <BoopNav users={users}/>\n        \n        <BoopContacts users={users}/>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","\r\nexport const getAllUsers = () => {\r\n  return fetch('https://jsonplaceholder.typicode.com/users', {method: 'GET'})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      return data;\r\n    });\r\n};\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './SASS/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}